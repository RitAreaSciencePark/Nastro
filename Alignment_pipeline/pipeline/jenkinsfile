pipeline {
    agent { 
        node {
            label 'docker'
            }
    }
    parameters {
        string(name: 'pathToSamplesheet', defaultValue: '/u/area/jenkins_onpexp/Pipeline_long_reads/samplesheet/orfeo_template.json', description: 'Path to the samplesheet of the work batch')
        string(name: 'pathToRunParams', defaultValue: '', description: 'Path to the runParams file with all meta data about the run')
    }
    stages {
        stage('Pull project repository on the Cluster') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                            cd /u/area/jenkins_onpexp/Pipeline_long_reads/Alignment_pipeline && git pull
                        ' 
                    '''
                }    
            }
        }  
        stage('Setup the run') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    /*TODO: parallelize the cat by creating N workers on tot_file/N 
                    This could be mandatory but for now it takes 2-3 minutes*/
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                            cd /u/area/jenkins_onpexp/Pipeline_long_reads/Alignment_pipeline/setupRun
                            params='${pathToRunParams}'
                            #Merge fastq
                            run_id=$(jq -r '.id' "${params}")
                            output_dir=$(jq -r '.output_dir' "${params}")
                            
                            fastq_dir="${output_dir}/pass"
                            merged_fastq="run_${run_id}_merged.fastq"

                            python3 startup_message.py $fastq_dir 

                            max_workers=10
                            srun -p EPYC -N 1 -c $max_workers --mem=50GB --time=1:0:0 merge_fastq.sh ${fastq_dir} ${output_dir}/${merged_fastq} $max_workers
                            
                            python3 main.py '${pathToSamplesheet}' '${pathToRunParams}' ${output_dir}/${merged_fastq}

                        '
                    '''
                }    
            }
        }    
        stage('Create sbatch file and launch the run') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                            cd /u/area/jenkins_onpexp/Pipeline_long_reads/Alignment_pipeline/launch_run/

                            #Create sbatch file
                            python3 main.py '${pathToRunParams}'

                            #Recover values to launch it
                            params='${pathToRunParams}'
                            id=$(jq -r '.id' "${params}")
                            logs_dir=$(jq -r '.logs_dir' "${params}")
                            al_config=$(jq -r '.al_config_path' "${params}")

                            sbatch_script="${logs_dir}/al_script_${id}.sh"
                            chmod +x ${sbatch_script}
                            sbatch $sbatch_script $al_config '${pathToSamplesheet}'
                        '
                    '''
                }    
            }
        }                 
    }
}