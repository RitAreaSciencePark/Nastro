pipeline {
    agent { 
        node {
            label 'docker'
            }
    }
    parameters {
        string(name: 'pathToSamplesheet', defaultValue: '', description: 'Path to the samplesheet of the work batch')
        string(name: 'pathToInputDir', defaultValue: '/u/area/jenkins_onpexp/scratch/TEST/input', description: 'Path to where the dir with symlinks will be stored. Root for each run input dir')
        string(name: 'pathToOutputDir', defaultValue: '/u/area/jenkins_onpexp/scratch/TEST/output', description: 'Path to where the output of the batch will be stored. Root for each run')
        string(name: 'pathToLogsDir', defaultValue: '/u/area/jenkins_onpexp/scratch/TEST/logs', description: 'Path to where the logs of the batch will be stored. Root for each run')
    }
    stages {
        stage('Pull project repository on the Cluster') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                cd /u/area/jenkins_onpexp/Nastro/Basecalling_pipeline && git pull
                            '
                    '''
                }    
            }
        }      
        stage('Read and check the samplesheet') {
            steps {    
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {                                            
                    /*Check if the samplesheet is correct*/
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                cd /u/area/jenkins_onpexp/Nastro/Basecalling_pipeline/samplesheet_check
                                python3 main.py '${pathToSamplesheet}'
                            '
                    '''
                }
            }
        }   
        stage('Subset the samplesheet and configure the run') {
            steps {    
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {                                            
                    /*Create from the batch samplesheet the subset to work on for this run
                    of the pipeline. This include input, output, log dirs and the config file*/
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                source ${HOME}/python_venvs/login_venv_jenkins/bin/activate
                                cd /u/area/jenkins_onpexp/Nastro/Basecalling_pipeline/subset_creation

                                export BUILD_NUMBER_LOCAL='${BUILD_NUMBER}'
                                echo "BUILD NUMBER is:" ${BUILD_NUMBER_LOCAL}

                                //Create the runParams file in root logs dir
                                python3 main.py '${pathToSamplesheet}' '${pathToInputDir}' '${pathToOutputDir}' '${pathToLogsDir}'
                                deactivate                            
                            ' 
                    '''                    
                }
            }
        }     
        stage('Create sbatch script and launch the basecalling') {
            steps {    
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {                                            
                    /*Use the run config to create a sbatch script and launch it*/
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                cd /u/area/jenkins_onpexp/Nastro/Basecalling_pipeline/launch_run

                                export BUILD_NUMBER_LOCAL='${BUILD_NUMBER}'
                                export LOG_PATH='${pathToLogsDir}'

                                //Once the runParams file is recovered, copy it to the run personal log dir
                                //This will be the file for this stage
                                id=$(jq -r '.id' ${LOG_PATH}/runParams_build_${BUILD_NUMBER_LOCAL}.txt)
                                cp ${LOG_PATH}/runParams_build_${BUILD_NUMBER_LOCAL}.txt ${LOG_PATH}/${id}/runParams_build_${BUILD_NUMBER_LOCAL}.txt 

                                export RUN_PARAMS_PATH="${LOG_PATH}/${id}/runParams_build_${BUILD_NUMBER_LOCAL}.txt"
                                echo ${RUN_PARAMS_PATH}

                                python3 main.py ${RUN_PARAMS_PATH}

                                #Make executable the sbatch file and launch it
                                id=$(jq -r '.id' $RUN_PARAMS_PATH)
                                logs_dir=$(jq -r '.logs_dir' $RUN_PARAMS_PATH)
                                config_path=$(jq -r '.config_path' $RUN_PARAMS_PATH)
                                
                                #Make pathToSamplesheet an env variable
                                export SAMPLESHEET='${pathToSamplesheet}'

                                sbatch_script="${logs_dir}/script_${id}.sh"

                                chmod +x ${sbatch_script}
                                sbatch ${sbatch_script} ${config_path} ${RUN_PARAMS_PATH} $SAMPLESHEET
                            '
                    '''                    
                }
            }
        }               
        stage('Monitor the basecalling') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                cd /u/area/jenkins_onpexp/Nastro/Basecalling_pipeline/monitor_run

                                export BUILD_NUMBER_LOCAL='${BUILD_NUMBER}'
                                export LOG_PATH='${pathToLogsDir}'

                                //Once again, recover the runParams file from the root stage, 
                                //but just to get the id, then you can use the one in the personal dir of the run
                                id=$(jq -r '.id' ${LOG_PATH}/runParams_build_${BUILD_NUMBER_LOCAL}.txt)
                                rm ${LOG_PATH}/runParams_build_${BUILD_NUMBER_LOCAL}.txt 

                                export RUN_PARAMS_PATH="${LOG_PATH}/${id}/runParams_build_${BUILD_NUMBER_LOCAL}.txt"
                                echo ${RUN_PARAMS_PATH}
                                sbatch script.sh '${pathToSamplesheet}' ${RUN_PARAMS_PATH}                                  
                            '
                    '''
                }
            }
        }
        stage('Ending') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'orfeo_jenkins_onpexp', keyFileVariable: 'SSH_ONPEXP_KEY', passphraseVariable: '', usernameVariable: 'SSH_ONPEXP_USER')]) {
                    sh '''
                        ssh -i ${SSH_ONPEXP_KEY} ${SSH_ONPEXP_USER}@10.128.2.81 '
                                echo "Ending" 
                            '
                    '''
                }
            }
        }        
    }
}